{"version":3,"file":"static/js/463.494aedd0.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactsForm/ContactsForm.styled.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactsForm/ContactsForm.jsx","pages/Contacts.jsx"],"sourcesContent":["export const selectFilters = state => state.contacts.filter;\nexport const selectItems = state => state.contacts.contacts.items;\nexport const selectIsLoading = state => state.contacts.contacts.isLoading;\nexport const selectError = state => state.contacts.contacts.error; \n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  width: 500px;\n  padding: 40px 20px;\n  height: 100%;\n  margin: 0 auto;\n  align-items: center;\n  font-size: 20px;\n  background-image: linear-gradient(\n    90deg,\n    #020024 0%,\n    #090979 35%,\n    #00d4ff 100%\n  );\n  color: #ffffff;\n`;\n\nexport const Title = styled.h1`\n  margin: 0;\n  margin-bottom: 20px;\n`;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  width: 100%;\n  margin: 0 auto;\n`;\n\nexport const Label = styled.label`\n  cursor: pointer;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  margin-bottom: 20px;\n  margin-top: 5px;\n  outline: none;\n  cursor: pointer;\n`;\nexport const Button = styled.button`\n  display: block;\n  padding: 5px 10px;\n  background-color: #ffffff;\n  color: #00008b;\n  font-size: 15px;\n  font-weight: bold;\n  cursor: pointer;\n\n  :hover {\n    background-color: #00d4ff;\n  }\n`;\n","import { useState } from 'react';\nimport { Form, Label, Input, Button } from './ContactForm.styled';\nimport { addContactItem } from '../../redux/contacts/operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { selectItems } from 'redux/contacts/selectors';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch(); \n  const contacts = useSelector(selectItems); \n  \n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleInputChange = event => {\n    switch (event.currentTarget.name) {\n      case 'name':\n        setName(event.currentTarget.value);\n        break;\n      case 'number':\n        setNumber(event.currentTarget.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setName('');\n    setNumber('');\n\nconst includeItem = contacts.find((item => {\n      return item.name.toLowerCase() === name.toLowerCase();\n}))\n    includeItem ? alert(`${name} is already in contacts`) : \n      dispatch(addContactItem({ name, number, id: nanoid() }));\n    toast.success(`Create new contact ${name}!`);\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={handleInputChange}\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          type=\"text\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={handleInputChange}\n        />\n      </Label>\n\n      <Button type=\"submit\" onSubmit={handleSubmit} disabled={!name && number}>\n        Add contact\n      </Button>\n    </Form>\n  );\n};\n\nexport default ContactForm;\n\n","import styled from 'styled-components';\n\nexport const Paragraph = styled.p`\n  margin: 0;\n  :not(:last-child) {\n    margin-bottom: 15px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Paragraph } from './ContactItem.styled';\n\nexport const ContactItem = ({ contact: { name, number } }) => {\n  return (\n    <>\n      <Paragraph>\n        {name}: {number}\n      </Paragraph>\n    </>\n  );\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n  padding-left: 0;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const Button = styled.button`\n  padding: 5px 7px;\n  cursor: pointer;\n  border: none;\n  border-radius: 5px;\n  background-color: #090979;\n  color: #ffffff;\n\n  :hover {\n    background-image: radial-gradient(\n      circle,\n      rgba(174, 238, 221, 1) 0%,\n      rgba(148, 177, 233, 0) 100%\n    );\n  }\n`;\n","import { ContactItem } from '../ContactItem/ContactItem';\nimport { List, Button, Item } from './ContactList.styled';\nimport { deleteContactItem } from '../../redux/contacts/operations'; \nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilters, selectItems } from '../../redux/contacts/selectors';\n\nconst ContactList = () => {\n  const dispatch = useDispatch(); \n  const filter = useSelector(selectFilters);\n  const contacts = useSelector(selectItems);\n\n  const normalizedFilter = filter.toLowerCase(); \n\n  const filterContacts = contacts.filter(contact =>\n contact.name.toLowerCase().includes(normalizedFilter)\n  );\n\n  return (\n    <>\n      <List>\n        {filterContacts && filterContacts.map(contact => (\n          <Item key={contact.id}>\n            <ContactItem contact={contact} />\n            <Button onClick={() => dispatch(deleteContactItem(contact.id))}>Delete</Button>\n          </Item>\n        ))}\n      </List>\n    </>\n  )\n};\n\nexport default ContactList;\n\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  display: block;\n  margin-top: 17px;\n  cursor: pointer;\n  outline: #ffffff;\n  background-color: transparent;\n  color: #ffffff;\n  margin-bottom: 10px;\n\n  :focus {\n    border: 3px dashed #00d4ff;\n  }\n`;\n","import { Input } from './Filter.styled';\nimport { onChangeFilterContacts } from '../../redux/contacts/filterSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilters } from '../../redux/contacts/selectors';\n\n  \nconst Filter = () => { \n  let filter = useSelector(selectFilters);\n  const dispatch = useDispatch();\n  \n  return (\n    <>\n      <label>\n        Find contacts by name\n        <Input\n          type=\"text\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          name=\"filter\"\n          value={filter}\n          onChange={(e) => dispatch(onChangeFilterContacts(e.target.value))}\n        />\n      </label>\n    </>\n  );\n};\n\nexport default Filter;\n\n","import { useEffect } from 'react';\nimport { fetchContacts } from '../../redux/contacts/operations';\nimport { selectError, selectIsLoading } from '../../redux/contacts/selectors';\nimport { Container, Title } from './ContactsForm.styled';\nimport ContactForm from '../ContactForm';\nimport ContactList from '../ContactList';\nimport Filter from '../Filter';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Loader } from 'components/Loader';\n\nexport const ContactsForm = () => {\nconst dispatch = useDispatch();\n  const loading = useSelector(selectIsLoading);\n  const error = useSelector(selectError); \n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n    \n    return (\n        <Container>\n      <Title>Phonebook</Title>\n      <ContactForm />\n      <div>\n        <h2>Contacts</h2>\n        <Filter />\n        {loading && !error && <Loader/>}\n          <ContactList/>\n      </div>\n    </Container>\n    )\n}","import { ContactsForm } from 'components/ContactsForm/ContactsForm';\n// import { Helmet } from 'react-helmet';\n\nconst Contacts = () => {\n    return (\n        <div>\n              {/* <Helmet>\n            <title>Contacts</title>\n             </Helmet> */}\n    <ContactsForm/> \n      </div>       \n    )\n}\n\nexport default Contacts; "],"names":["selectFilters","state","contacts","filter","selectItems","items","selectIsLoading","isLoading","selectError","error","Container","styled","Title","Form","Label","Input","Button","dispatch","useDispatch","useSelector","useState","name","setName","number","setNumber","handleInputChange","event","currentTarget","value","handleSubmit","preventDefault","find","item","toLowerCase","alert","addContactItem","id","nanoid","toast","onSubmit","type","pattern","title","required","onChange","disabled","Paragraph","ContactItem","contact","List","Item","normalizedFilter","filterContacts","includes","map","onClick","deleteContactItem","e","onChangeFilterContacts","target","ContactsForm","loading","useEffect","fetchContacts","Loader"],"sourceRoot":""}